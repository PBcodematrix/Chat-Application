{"version":3,"file":"static/js/265.cd330a1f.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","components/hook-form/RHFCodes.js","sections/auth/VerifyForm.js","pages/auth/Verify.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js","sections/auth/LoginForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  label:PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          \r\n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","import { useRef } from \"react\";\r\n// form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { Stack, TextField } from \"@mui/material\";\r\n\r\n\r\nexport default function RHFCodes({ keyName = \"\", inputs = [], ...other }) {\r\n  const codesRef = useRef(null);\r\n\r\n  const { control } = useFormContext();\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIndex = name.replace(keyName, \"\");\r\n\r\n    const fieldIntIndex = Number(fieldIndex);\r\n\r\n    const nextfield = document.querySelector(\r\n      `input[name=${keyName}${fieldIntIndex + 1}]`\r\n    );\r\n\r\n    if (value.length > maxLength) {\r\n      event.target.value = value[0];\r\n    }\r\n\r\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextfield !== null) {\r\n      nextfield.focus();\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\r\n      {inputs.map((name, index) => (\r\n        <Controller\r\n          key={name}\r\n          name={`${keyName}${index + 1}`}\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <TextField\r\n              {...field}\r\n              error={!!error}\r\n              autoFocus={index === 0}\r\n              placeholder=\"-\"\r\n              onChange={(event) => {\r\n                handleChangeWithNextField(event, field.onChange);\r\n              }}\r\n              onFocus={(event) => event.currentTarget.select()}\r\n              InputProps={{\r\n                sx: {\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 },\r\n                  \"& input\": { p: 0, textAlign: \"center\" },\r\n                },\r\n              }}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                type: \"number\",\r\n              }}\r\n              {...other}\r\n            />\r\n          )}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Stack, IconButton, InputAdornment, Button } from \"@mui/material\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport RHFCodes from \"../../components/hook-form/RHFCodes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { VerifyEmail } from \"../../redux/Slices/auth\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyForm() {\r\n\r\n    const dispatch=useDispatch();\r\n    const {email}=useSelector((state)=>state.auth);\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.string().required(\"Code is required\"),\r\n    code2: Yup.string().required(\"Code is required\"),\r\n    code3: Yup.string().required(\"Code is required\"),\r\n    code4: Yup.string().required(\"Code is required\"),\r\n    code5: Yup.string().required(\"Code is required\"),\r\n    code6: Yup.string().required(\"Code is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code1: \"\",\r\n    code2: \"\",\r\n    code3: \"\",\r\n    code4: \"\",\r\n    code5: \"\",\r\n    code6: \"\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API Request\r\n      dispatch(VerifyEmail({\r\n            otp:`${data.code1}${data.code2}${data.code3}${data.code4}${data.code5}${data.code6}`,\r\n            email\r\n      }));\r\n     \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFCodes\r\n          keyName=\"code\"\r\n          inputs={[\"code1\", \"code2\", \"code3\", \"code4\", \"code5\", \"code6\"]}\r\n        />\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{\r\n            mt: 3,\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            \"&:hover\": {\r\n              bgcolor: \"text.primary\",\r\n              color: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            },\r\n          }}\r\n        >\r\n          Verify\r\n        </Button>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}","import { Link as RouterLink } from \"react-router-dom\";\r\n// sections\r\nimport { Stack, Typography, Link } from \"@mui/material\";\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\nimport Login from \"../../sections/auth/LoginForm\";\r\nimport VerifyForm from \"../../sections/auth/VerifyForm\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h4\">Please Verify OTP</Typography>\r\n\r\n        <Stack direction=\"row\" spacing={0.5}>\r\n          <Typography variant=\"body2\">\r\n            Sent to email (shreyanshshah242@gmail.com)\r\n          </Typography>\r\n        </Stack>\r\n      </Stack>\r\n      {/* Form */}\r\n      <VerifyForm />\r\n    </>\r\n  );\r\n}","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","import { Divider, IconButton, Stack } from '@mui/material'\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react'\r\nimport React from 'react'\r\n\r\nconst AuthSocial = () => {\r\n  return (\r\n        <div>\r\n            <Divider sx={{my:2.5,typography:\"overline\",color:\"text.disabled\",'&::before,&::after':{borderTopStyle:\"dashed\"}}}>\r\n                OR\r\n            </Divider>\r\n            <Stack direction={\"row\"} alignItems={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n                <IconButton >\r\n                    <GoogleLogo color='#DF3E30'/>\r\n                </IconButton>\r\n                <IconButton color='inherit'>\r\n                    <GithubLogo />\r\n                </IconButton>\r\n                <IconButton >\r\n                    <TwitterLogo color='#1C9CEA'/>\r\n                </IconButton>\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthSocial","import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Link, Stack, Alert, IconButton, InputAdornment,Button } from \"@mui/material\";\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LoginUser } from \"../../redux/Slices/auth\";\r\nconst LoginForm = () => {\r\n\r\n  const dispatch=useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"demo@tawk.com\",\r\n    password: \"demo1234\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log(data);\r\n      dispatch(LoginUser(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n    <Stack spacing={3}>\r\n      {!!errors.afterSubmit && (\r\n        <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n      )}\r\n\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <RHFTextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment >\r\n              <IconButton\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <Eye /> : <EyeSlash />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </Stack>\r\n\r\n    <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n      <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\r\n        Forgot password?\r\n      </Link>\r\n    </Stack>\r\n\r\n    <Button\r\n      fullWidth\r\n      color=\"inherit\"\r\n      size=\"large\"\r\n      type=\"submit\"\r\n      variant=\"contained\"\r\n      sx={{\r\n        bgcolor: \"text.primary\",\r\n        color: (theme) =>\r\n          theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n        \"&:hover\": {\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n        },\r\n      }}\r\n    >\r\n      Login\r\n    </Button>\r\n  </FormProvider>\r\n  )\r\n}\r\n\r\nexport default LoginForm"],"names":["FormProvider","children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","RHFCodes","keyName","inputs","codesRef","useRef","Stack","direction","spacing","justifyContent","ref","map","index","autoFocus","placeholder","onChange","event","handleChange","target","maxLength","fieldIndex","replace","fieldIntIndex","Number","nextfield","document","querySelector","length","focus","handleChangeWithNextField","onFocus","currentTarget","select","InputProps","sx","width","xs","sm","height","p","textAlign","inputProps","type","VerifyForm","dispatch","useDispatch","email","useSelector","state","auth","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","formState","isSubmitting","errors","data","VerifyEmail","otp","console","Button","size","variant","mt","bgcolor","color","theme","palette","LoginPage","mb","position","Typography","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","IconBase","displayName","opacity","GithubLogo","TwitterLogo","Divider","my","typography","borderTopStyle","alignItems","IconButton","useState","showPassword","setShowPassword","LoginSchema","password","reset","setError","log","LoginUser","afterSubmit","severity","label","endAdornment","onClick","component","RouterLink","to","underline"],"sourceRoot":""}