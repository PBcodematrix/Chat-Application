{"version":3,"file":"static/js/240.924f8756.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  label:PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          \r\n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","import { useState } from 'react';\r\nimport * as Yup from 'yup';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Stack, IconButton, InputAdornment, Button, Alert } from '@mui/material';\r\n// components\r\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\r\nimport { Eye, EyeSlash } from 'phosphor-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NewPassword } from '../../redux/Slices/auth';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function NewPasswordForm() {\r\n\r\n  const dispatch=useDispatch();\r\n  const [queryParameters]=useSearchParams();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    \r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n    passwordConfirm: Yup.string()\r\n      .required('Confirm password is required')\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    password: '',\r\n    passwordConfirm: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n    //   Send API Request\r\n    dispatch(NewPassword({...data,token:queryParameters.get(\"token\")}));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        \r\n      {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Eye /> : <EyeSlash />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n          }}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"passwordConfirm\"\r\n          label=\"Confirm New Password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Eye /> : <EyeSlash />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          \r\n          sx={{\r\n            mt: 3,\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            \"&:hover\": {\r\n              bgcolor: \"text.primary\",\r\n              color: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            },\r\n          }}\r\n        >\r\n          Update Password\r\n        </Button>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}","import { Stack, Typography, Link } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport NewPasswordForm from \"../../sections/auth/NewPasswordForm\";\r\n\r\nconst NewPassword = () => {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h3\" paragraph>\r\n          Reset Password\r\n        </Typography>\r\n\r\n        <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\r\n          Please set your new password.\r\n        </Typography>\r\n      </Stack>\r\n\r\n      {/* NewPasswordForm */}\r\n\r\n      <NewPasswordForm />\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        to={\"/auth/login\"}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          mt: 3,\r\n          mx: \"auto\",\r\n          alignItems: \"center\",\r\n          display: \"inline-flex\",\r\n        }}\r\n      >\r\n        <CaretLeft size={24} />\r\n        Return to sign in\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPassword;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","NewPasswordForm","dispatch","useDispatch","useSearchParams","queryParameters","useState","showPassword","setShowPassword","VerifyCodeSchema","Yup","shape","password","min","required","passwordConfirm","oneOf","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","reset","setError","errors","formState","data","NewPassword","token","get","console","Stack","spacing","afterSubmit","Alert","severity","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Button","size","variant","sx","mt","bgcolor","color","theme","palette","mb","Typography","paragraph","Link","component","RouterLink","to","mx","alignItems","display","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","CaretLeft","forwardRef","props","ref","IconBase","displayName"],"sourceRoot":""}